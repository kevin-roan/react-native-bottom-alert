{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","Modal","ActivityIndicator","styles","Animated","FadeInDown","FadeOutDown","DEFAULT_COLORS","buttonTextColor","buttonBgColor","backgroundColor","descriptionTextColor","BottomAlert","title","visible","buttonText","description","onButtonPress","duration","autoHide","showLoader","colors","_visible","setVisible","mergedColors","timer","setTimeout","clearTimeout","createElement","transparent","animationType","style","modalOverlay","container","borderColor","entering","delay","exiting","contentContainer","color","desc","size","closeButton","onPress","closeButtonText"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Modal,\n  ActivityIndicator,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport Animated, { FadeInDown, FadeOutDown } from \"react-native-reanimated\";\n\ninterface Colors {\n  buttonTextColor?: string;\n  buttonBgColor?: string;\n  backgroundColor?: string;\n  descriptionTextColor?: string;\n}\n\ninterface Props {\n  visible: boolean;\n  title?: string;\n  description?: string;\n  buttonText?: string;\n  onButtonPress?: () => void;\n  duration?: number;\n  autoHide?: boolean;\n  showLoader?: boolean;\n  colors?: Colors; // accepts color customization\n}\n\nconst DEFAULT_COLORS: Required<Colors> = {\n  buttonTextColor: \"#3483fa\", // was PRIMARY\n  buttonBgColor: \"#f0f2f5\", // was BACKGROUND\n  backgroundColor: \"#fff\", // was WHITE\n  descriptionTextColor: \"#6e6e6e\", // was TINT\n};\n\nconst BottomAlert: React.FC<Props> = ({\n  title,\n  visible,\n  buttonText,\n  description,\n  onButtonPress,\n  duration = 3000,\n  autoHide = true,\n  showLoader = true,\n  colors = {},\n}) => {\n  const [_visible, setVisible] = useState(visible);\n\n  // Merge provided colors with defaults\n  const mergedColors = { ...DEFAULT_COLORS, ...colors };\n\n  useEffect(() => {\n    if (visible) {\n      setVisible(true);\n\n      if (autoHide) {\n        const timer = setTimeout(() => {\n          setVisible(false);\n          if (onButtonPress) onButtonPress();\n        }, duration);\n        return () => clearTimeout(timer);\n      }\n    } else {\n      setVisible(false);\n    }\n  }, [visible, duration, onButtonPress]);\n\n  if (!_visible) return null;\n\n  return (\n    <Modal transparent animationType=\"none\" visible={_visible}>\n      <View style={styles.modalOverlay}>\n        <Animated.View\n          style={[\n            styles.container,\n            {\n              backgroundColor: mergedColors.backgroundColor,\n              borderColor: mergedColors.buttonTextColor + \"10\",\n            },\n          ]}\n          entering={FadeInDown.duration(500).delay(100)}\n          exiting={FadeOutDown.duration(500).delay(100)}\n        >\n          <View style={styles.contentContainer}>\n            <Text\n              style={[styles.title, { color: mergedColors.buttonTextColor }]}\n            >\n              {title || \"Operation Completed Successfully\"}\n            </Text>\n            {description && (\n              <Text\n                style={[\n                  styles.desc,\n                  { color: mergedColors.descriptionTextColor },\n                ]}\n              >\n                {description}\n              </Text>\n            )}\n          </View>\n          {showLoader && (\n            <ActivityIndicator\n              size=\"small\"\n              color={mergedColors.buttonTextColor}\n            />\n          )}\n          <TouchableOpacity\n            style={[\n              styles.closeButton,\n              {\n                backgroundColor: mergedColors.buttonBgColor,\n                borderColor: mergedColors.descriptionTextColor + \"10\",\n              },\n            ]}\n            onPress={() => {\n              setVisible(false);\n              if (onButtonPress) onButtonPress();\n            }}\n          >\n            <Text\n              style={[\n                styles.closeButtonText,\n                { color: mergedColors.buttonTextColor },\n              ]}\n            >\n              {buttonText || \"Close\"}\n            </Text>\n          </TouchableOpacity>\n        </Animated.View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default BottomAlert;\n"],"mappings":"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","ignoreList":[]}